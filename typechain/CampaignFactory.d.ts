/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface CampaignFactoryInterface extends ethers.utils.Interface {
  functions: {
    "createCampaign(uint256)": FunctionFragment;
    "deployedCampaigns(uint256)": FunctionFragment;
    "getDeployedCampaigns()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createCampaign",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deployedCampaigns",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDeployedCampaigns",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "createCampaign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployedCampaigns",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDeployedCampaigns",
    data: BytesLike
  ): Result;

  events: {
    "CreateNewCampaign(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CreateNewCampaign"): EventFragment;
}

export class CampaignFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: CampaignFactoryInterface;

  functions: {
    createCampaign(
      minimum: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createCampaign(uint256)"(
      minimum: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deployedCampaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "deployedCampaigns(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getDeployedCampaigns(
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getDeployedCampaigns()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;
  };

  createCampaign(
    minimum: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createCampaign(uint256)"(
    minimum: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deployedCampaigns(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "deployedCampaigns(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getDeployedCampaigns(overrides?: CallOverrides): Promise<string[]>;

  "getDeployedCampaigns()"(overrides?: CallOverrides): Promise<string[]>;

  callStatic: {
    createCampaign(
      minimum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "createCampaign(uint256)"(
      minimum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deployedCampaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "deployedCampaigns(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getDeployedCampaigns(overrides?: CallOverrides): Promise<string[]>;

    "getDeployedCampaigns()"(overrides?: CallOverrides): Promise<string[]>;
  };

  filters: {
    CreateNewCampaign(child: null): EventFilter;
  };

  estimateGas: {
    createCampaign(
      minimum: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createCampaign(uint256)"(
      minimum: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deployedCampaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "deployedCampaigns(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDeployedCampaigns(overrides?: CallOverrides): Promise<BigNumber>;

    "getDeployedCampaigns()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    createCampaign(
      minimum: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createCampaign(uint256)"(
      minimum: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deployedCampaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "deployedCampaigns(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDeployedCampaigns(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDeployedCampaigns()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
